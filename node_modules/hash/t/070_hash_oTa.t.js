StartTest(function(t) {
    
    var async0 = t.beginAsync()
    
    use([ 'Hash' ], function () {
        
        //======================================================================================================================================================================================================================================================

        var ob1 = { key1 : "Some value", key2 : { A : "one", B : [0,1,2] }, key3 : 5 }

        var ob2 = { key1 : "Some value", key3 : 5, key2 : { B : [0,1,2], A : "one" } }

        var oTa_ob1 = JSON.stringify(Hash.oTa(ob1))
        var oTa_ob2 = JSON.stringify(Hash.oTa(ob2))

        var compare = function(one, two) { if (one == two) { return true } else { return false } }

        /// compare(JSON.stringify(ob1), JSON.stringify(ob2)) // => false

        // compare(Hash.md5(oTa_ob1), Hash.md5(oTa_ob2)) // => true

        t.ok(!compare(Hash.md5(JSON.stringify(ob1)), Hash.md5(JSON.stringify(ob2))), "MD5 sums for stringified object literals don't match, as expected")

        t.ok(compare(Hash.md5(oTa_ob1), Hash.md5(oTa_ob2)), "MD5 sums match for stringified oTa() returns on the same object literals")

        t.ok(compare(Hash.sha256(oTa_ob1), Hash.sha256(oTa_ob2)), "SHA-256 sums match for stringified oTa() returns on the same object literals")

        t.endAsync(async0)
        
        t.done()
    })
})


